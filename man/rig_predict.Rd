% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rig.R
\name{rig_predict}
\alias{rig_predict}
\title{Identify Radiation Induced Glioma Signatures}
\usage{
rig_predict(
  data,
  col_samples,
  col_genes,
  col_expression,
  signature = rig_genes(),
  classification_threshold = 0.7,
  expression_threshold = 1.3,
  require_all_genes_found = FALSE
)
}
\arguments{
\item{data}{A data.frame representing gene expression results for either a single sample or many.
It must contain at least 3 columns: one for gene names, one for gene expression measures (ideally TPM), and one for sample identifiers.}

\item{col_samples}{The name of the column containing sample identifiers.}

\item{col_genes}{The name of the column containing gene names.}

\item{col_expression}{The name of the column containing gene expression measures (ideally TPM).}

\item{signature}{A named list where each element is a character vector of valid gene names for a single gene, and names are the common names for those genes. Defaults to \code{rig_genes()}.}

\item{classification_threshold}{The proportion of RIG genes that must be overexpressed before the sample is classified as a RIG}

\item{expression_threshold}{The robust Zscore above which a rig gene is considered overexpressed.}

\item{require_all_genes_found}{A boolean indicating whether an error should be thrown if there are genes in the signature gene set that cannot be found in the expression dataset. Defaults to FALSE.}
}
\value{
A data.frame with sample-level summaries including the number and proportion of overexpressed RIG genes, median z-scores, and a prediction of Radiation Induced Glioma status.
}
\description{
This function identifies Radiation Induced Glioma (RIG) signatures by looking for overexpression of RIG genes within a given cohort.
Predictions will only be accurate if RIGs make up <50\% of the samples supplied.
}
\examples{
\dontrun{
data <- data.frame(
  sample_id = c('sample1', 'sample1', 'sample2', 'sample2'),
  gene = c('geneA', 'geneB', 'geneA', 'geneC'),
  expression = c(5, 3, 4, 7)
)
rig_identification <- rig_predict(data, 'sample_id', 'gene', 'expression')
print(rig_identification)
}
}
